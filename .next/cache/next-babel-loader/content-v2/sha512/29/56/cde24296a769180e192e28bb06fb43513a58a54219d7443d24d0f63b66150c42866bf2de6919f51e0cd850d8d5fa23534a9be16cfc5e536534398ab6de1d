{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useScroll = function () {\n  const {\n    0: lastScrollTop,\n    1: setLastScrollTop\n  } = useState(0);\n  const {\n    0: bodyOffset,\n    1: setBodyOffset\n  } = useState({});\n  const {\n    0: scrollY,\n    1: setScrollY\n  } = useState(bodyOffset.top);\n  const {\n    0: scrollX,\n    1: setScrollX\n  } = useState(bodyOffset.left);\n  const {\n    0: scrollDirection,\n    1: setScrollDirection\n  } = useState();\n  const {\n    0: windowSize,\n    1: setWindowSize\n  } = useState({});\n\n  const listener = function (e) {\n    setWindowSize({\n      height: window.innerHeight,\n      width: window.innerWidth\n    });\n    setBodyOffset(document.body.getBoundingClientRect());\n    setScrollY(-bodyOffset.top);\n    setScrollX(bodyOffset.left);\n    setScrollDirection(lastScrollTop > -bodyOffset.top ? 'down' : 'up');\n    setLastScrollTop(-bodyOffset.top);\n  };\n\n  useEffect(function () {\n    setWindowSize({\n      height: window.innerHeight,\n      width: window.innerWidth\n    });\n    setBodyOffset(document.body.getBoundingClientRect());\n    window.addEventListener('scroll', listener);\n    return function () {\n      window.removeEventListener('scroll', listener);\n    };\n  }, []);\n  return {\n    scrollY,\n    scrollX,\n    scrollDirection,\n    windowSize\n  };\n};\n\nexport default useScroll;","map":{"version":3,"sources":["/Users/chunhonglau/david/hungteam-web/src/hooks/useScroll.js"],"names":["useState","useEffect","useScroll","lastScrollTop","setLastScrollTop","bodyOffset","setBodyOffset","scrollY","setScrollY","top","scrollX","setScrollX","left","scrollDirection","setScrollDirection","windowSize","setWindowSize","listener","e","height","window","innerHeight","width","innerWidth","document","body","getBoundingClientRect","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAG,YAAM;AACpB,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCJ,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM;AAAA,OAACK,UAAD;AAAA,OAAaC;AAAb,MAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAACK,UAAU,CAACI,GAAZ,CAAtC;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAACK,UAAU,CAACO,IAAZ,CAAtC;AACA,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCd,QAAQ,EAAtD;AACA,QAAM;AAAA,OAACe,UAAD;AAAA,OAAaC;AAAb,MAA8BhB,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMiB,QAAQ,GAAG,UAACC,CAAD,EAAO;AACpBF,IAAAA,aAAa,CAAC;AAACG,MAAAA,MAAM,EAAEC,MAAM,CAACC,WAAhB;AAA6BC,MAAAA,KAAK,EAAEF,MAAM,CAACG;AAA3C,KAAD,CAAb;AACAjB,IAAAA,aAAa,CAACkB,QAAQ,CAACC,IAAT,CAAcC,qBAAd,EAAD,CAAb;AACAlB,IAAAA,UAAU,CAAC,CAACH,UAAU,CAACI,GAAb,CAAV;AACAE,IAAAA,UAAU,CAACN,UAAU,CAACO,IAAZ,CAAV;AACAE,IAAAA,kBAAkB,CAACX,aAAa,GAAG,CAACE,UAAU,CAACI,GAA5B,GAAkC,MAAlC,GAA2C,IAA5C,CAAlB;AACAL,IAAAA,gBAAgB,CAAC,CAACC,UAAU,CAACI,GAAb,CAAhB;AACH,GAPD;;AASAR,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,aAAa,CAAC;AAAEG,MAAAA,MAAM,EAAEC,MAAM,CAACC,WAAjB;AAA8BC,MAAAA,KAAK,EAAEF,MAAM,CAACG;AAA5C,KAAD,CAAb;AACAjB,IAAAA,aAAa,CAACkB,QAAQ,CAACC,IAAT,CAAcC,qBAAd,EAAD,CAAb;AACAN,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCV,QAAlC;AACA,WAAO,YAAM;AACTG,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCX,QAArC;AACH,KAFD;AAGH,GAPQ,EAON,EAPM,CAAT;AASA,SAAO;AACHV,IAAAA,OADG;AAEHG,IAAAA,OAFG;AAGHG,IAAAA,eAHG;AAIHE,IAAAA;AAJG,GAAP;AAMH,CAhCD;;AAkCA,eAAeb,SAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useScroll = () => {\n    const [lastScrollTop, setLastScrollTop] = useState(0);\n    const [bodyOffset, setBodyOffset] = useState({});\n    const [scrollY, setScrollY] = useState(bodyOffset.top);\n    const [scrollX, setScrollX] = useState(bodyOffset.left);\n    const [scrollDirection, setScrollDirection] = useState();\n    const [windowSize, setWindowSize] = useState({})\n\n    const listener = (e) => {\n        setWindowSize({height: window.innerHeight, width: window.innerWidth});\n        setBodyOffset(document.body.getBoundingClientRect());\n        setScrollY(-bodyOffset.top);\n        setScrollX(bodyOffset.left);\n        setScrollDirection(lastScrollTop > -bodyOffset.top ? 'down' : 'up');\n        setLastScrollTop(-bodyOffset.top);\n    };\n\n    useEffect(() => {\n        setWindowSize({ height: window.innerHeight, width: window.innerWidth });\n        setBodyOffset(document.body.getBoundingClientRect());\n        window.addEventListener('scroll', listener);\n        return () => {\n            window.removeEventListener('scroll', listener);\n        };\n    }, []);\n\n    return {\n        scrollY,\n        scrollX,\n        scrollDirection,\n        windowSize,\n    };\n};\n\nexport default useScroll;\n"]},"metadata":{},"sourceType":"module"}